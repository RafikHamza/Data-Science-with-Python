[
    {
    "question": "<b>True or False:</b> For all events $A$ and $B$, $P(A \\mid B) + P( \\overline{A} \\mid B ) =1.$",
    "type": "multiple_choice",
    "answers": [
        {
        "answer": "True",
        "correct": true,
        "feedback": "Correct. $A$ and $\\overline{A}$ are complementary events evaluated using the same conditional probability measure, so their probabilities add to 1."
    },
        {
        "answer": "False",
        "correct": false,
        "feedback": "Incorrect. $A$ and $\\overline{A}$ are complementary events evaluated using the same conditional probability measure, so their probabilities add to 1."
    },
        {
        "answer": "There is not enough information to decide.",
        "correct": false,
        "feedback": "Incorrect. "
    }
    ]
},
    {
    "question": "<b>True or False:</b> For all events $A$ and $B$, $P(A \\mid B) + P( A \\mid \\overline{B} ) =1.$",
    "type": "multiple_choice",
    "answers": [
        {
        "answer": "True",
        "correct": false,
        "feedback": "Incorrect. This asks about the probability of the event $A$ using two <b>different conditional probability measures</b>. These generally will not add to 1."
    },
        {
        "answer": "False",
        "correct": true,
        "feedback": "Correct. This asks about the probability of the event $A$ using two <b>different conditional probability measures</b>. These generally will not add to 1."
    },
        {
        "answer": "There is not enough information to decide.",
        "correct": false,
        "feedback": "Incorrect. "
    }
    ]
},
{
        "question": "A cybersecurity researcher has developed a \"fuzzing\" tool that automatically tests operating systems for vulnerabilities by sending random requests to the OS application programming interfaces (APIs) and checking whether the input produces unexpected behavior (crashing or leakage of information). Over a standard battery of one million fuzzing inputs, the tool is 80% successful at identifying a vulnerable API but has a 10% probability of reporting a vulerability when none exists. For a particular OS, 95% of the APIs have no vulnerability. What is the probability that an API of that OS is vulnerable if the fuzzing tool indicates a vulerability? Give your answer to 3 significant digits.",
    "type": "numeric",
    "precision": 3,
    "answers": [
        {
        "type": "value",
        "value": 0.296,
        "correct": true,
        "feedback": "Correct! "
    },
        {
        "type": "default",
        "correct": false,
        "feedback": "Incorrect. Use Bayes' Rule to solve this problem."
    },
        {
        "type": "range",
        "range": [ -100000000, -0.000000000001], 
        "correct": false,
        "feedback": "Incorrect. Probabilties must be between 0 and 1."
    },
        {
        "type": "range",
        "range": [ 1.0000001, 100000000], 
        "correct": false,
        "feedback": "Incorrect. Probabilties must be between 0 and 1."
    }
    ]
    }
]
