[
    {   "question": "JupyterLab has two main interface modes. Select them below:",
        "type": "many_choice",
        "answers": [
            {
            "answer": "Insert Mode",
            "correct": false,
            "feedback": "Incorrect. This is not one of the interface modes."
            },
            {
                "answer": "Edit Mode",
                "correct": true,
                "feedback": "Correct. Use Edit Mode to edit the content of a single cell."
            },
            {
                "answer": "Markdown Mode",
                "correct": false,
                "feedback": "Incorrect. This is a cell type and not a mode of the JuptyerLab interface."
            },
            {
                "answer": "Command Mode",
                "correct": true,
                "feedback": "Correct. Use Command mode to select cells and take actions on them, such as moving them or copying and pasting them."
            },
            {
                "answer": "LaTeX Mode",
                "correct": false,
                "feedback": "Incorrect. LaTeX is not an interface mode of JupyterLab. It is a way to specify mathematics within Markdown cells."
            }
        ]
    },
    {   "question": "Which of the following are ways to evaluate a cell?",
        "type": "many_choice",
        "answers": [
            {
            "answer": "Press Alt-Enter or Command-Enter",
            "correct": true,
            "feedback": "Correct. This is the most common way to evaluate a cell."
            },
            {
            "answer": "Press the Enter key",
            "correct": false,
            "feedback": "Incorrect. In Edit mode, the Enter key starts a new line. In Command mode, the Enter key switches to Edit mode on the selected cell."
            },
            {
                "answer": "Press the triangular Play button in the tooblar",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Press Control-M from Edit mode.",
                "correct": false,
                "feedback": "Incorrect. In Edit mode, Control-M switches to Command mode."
            },
            {
                "answer": "Use Run Selected Cell from the Run menu",
                "correct": true,
                "feedback": "Correct. The Run menu provides many different choices for evaluating cells and shows keyboard shortcuts for those commands."
            }
        ]
    },
    {
        "question": "Choose all of the following that can be included in Jupyter notebooks?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "Text and graphics output from Python",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Typeset mathematics",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Python executable code",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Formatted text",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Live snakes via Python",
                "correct": false,
                "feedback": "I hope not."
            }
        ]
    },
    {
        "question": "Which of these are used to create formatted text in Jupyter notebooks?",
        "type": "multiple_choice",
        "answers": [
            {
                "answer": "Wiki markup",
                "correct": false,
            "feedback": "Incorrect. Although Wiki markup or Wiki Text is a way to specify formatted text, it is not the markup language supported in Jupyter notebooks." 
            },
            {
                "answer": "SVG",
                "correct": false,
                "feedback": "Incorrect. SVG is way for specifying scalable vector graphics."
            },
            {
                "answer": "Markdown",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Rich Text",
                "correct": false,
                "feedback": "Incorrect. Rich text can refer to any markup language or to Rich Text Format, which was created Microsoft. It is not the markup language used in Jupyter notebooks."
            }
        ]
    },
    {
        "question": "Which of these are used to typeset mathematics in Jupyter notebooks?",
        "type": "multiple_choice",
        "answers": [
            {
                "answer": "SiliCoN",
                "correct": false,
                "feedback": "Incorrect. This is a made-up name."
            },
            {
                "answer": "AcrYliC",
                "correct": false,
                "feedback": "Incorrect. This is a made-up name."
            },
            {
                "answer": "MS Equation",
                "correct": false,
                "feedback": "Incorrect. Although MS Equation is a way to enter equations, it is not the technology used in Jupyter notebooks."
            },
            {
                "answer": "LaTeX",
                "correct": true,
                "feedback": "Correct. Jupter notebooks support the mathematical typsetting language from the LaTeX document writing system."
            }
        ]
    },
 {
        "question": "Which of these would you use to create a variable called <code>data</code> with value 10 in Python?",
        "type": "multiple_choice",
        "answers": [
            {
                "code": "data <- 10",
                "correct": false,
                "feedback": "Incorrect. This is how to create that variable in R."
            },
            {
                "code": "let data = 10",
                "correct": false,
                "feedback": "Incorrect. Python does not use the let operator."
            },
            {
                "code": "data := 10",
                "correct": false,
                "feedback": "Incorrect. Although there is a := operator (called the Walrus operator) that performs assignment, it cannot be used alone like this."
            },
            {
                "code": "data = 10",
                "correct": true,
                "feedback": "Correct. The variable is created upon assignment using the = operator"
            },
            {
                "code": "def data\ndata = 10",
                "correct": false,
                "feedback": "Incorrect. The <code>def</code> keyword is to declare a function, not a variable."
            },
            {
                "code": "int data = 10",
                "correct": false,
                "feedback": "Incorrect. This is C/C++ style. Python uses implicit typing and require declaring the type when creating a new variable."
            }
        ]
    },
   {
        "question": "Which of the following are used to create functional code blocks in Python?",
        "type": "multiple_choice",
        "answers": [
            {
                "answer": "curly braces {}",
                "correct": false,
                "feedback": "Incorrect. Curly braces are used to group code in C, C++, and other languages, but not Python"
            },
            {
                "answer": "parentheses ()",
                "correct": false,
                "feedback": "Incorrect."
            },
            {
                "answer": "blank lines",
                "correct": false,
                "feedback": "Incorrect. Blank lines can help distinguish the end of code blocks visually, but do not affect the functional grouping"
            },
            {
                "answer": "indentation",
                "correct": true,
                "feedback": "Correct. The only way to specify functional code blocks in Python is via indentation."
            }
        ]
    },
    {
        "question": "Choose all of the following that are used to create comments in Python:",
        "type": "many_choice",
        "answers": [
            {
                "answer": "//",
                "correct": false,
                "feedback": "Incorrect. This is the format of a single-line comment in C."
            },
            {
                "answer": "# comment",
                "correct": true,
                "feedback": "Correct. A single hash is used to create a single-line comment"
            },
            {
                "answer": "''' comment'''",
                "correct": true,
                "feedback": "Correct. This is used for multi-line comments."
            },
            {
                "answer": "/* comment */",
                "correct": false,
                "feedback": "Incorrect. This is a C-style comment."
            }
        ]
    },
    {
        "question": "Determine the output of the following Python code:",
	      "code": "a=\"1\"\nb=\"2\"\nprint(a+b)",
        "type": "multiple_choice",
        "answers": [
            {
                "answer": "1",
                "correct": false,
                "feedback": "No. When strings are operated on by +, they are concatenated."
            },
            {
                "answer": "2",
                "correct": false,
                "feedback": "No. When strings are operated on by +, they are concatenated."
            },
            {
                "answer": "3",
                "correct": false,
                "feedback": "No. When strings are operated on by +, they are concatenated."
            },
            {
                "answer": "12",
                "correct": true,
                "feedback": "Yes. The + operator will concatenate the strings \"1\" and \"2\"."
            },
            {
                "answer": "error",
                "correct": false,
                "feedback": "No. The + operator for strings performs string concatenation."
            }
        ]
    },
    {
        "question": "What is the output of the following Python program?",
        "code": "dogs=['Amber', 'Madden', 'Roxy', 'Annie']\nprint(dogs[2])",
        "answers": [
            {
                "answer": "Amber",
                "correct": false,
                "feedback": "Because of 0-based indexing, Amber would be dogs[0]"
            },
            {
                "answer": "Madden",
                "correct": false,
                "feedback": "Because of 0-based indexing, Madden would be dogs[1]"
            },
            {
                "answer": "Roxy",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Annie",
                "correct": false,
                "feedback": "Because of 0-based indexing, Annie would be dogs[3]"
            }
        ],
        "type": "multiple_choice"
    },
    {
        "question": "What numbers are printed by the following Python program?",
        "code": "for k in range(3,9,3):\n    print(k)",
        "answers": [
            {
                "answer": "0, 3",
                "correct": false,
                "feedback": "No. The first argument is the starting value for the range. Try again."
            },
            {
                "answer": "3, 6",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "3, 6, 9",
                "correct": false,
                "feedback": "No. Although the second argument (9) is the end of this range, remember that the end values are not included in the range."
            },
            {
                "answer": "3, 9",
                "correct": false,
                "feedback": "No. The second argument (9) is the end of this range, and the third argument (3) is the increment."
            }
        ],
        "type": "multiple_choice"
    },
    {
        "question": "The variable mylist is a Python list. Choose which code snippet will append the item 3 to mylist.",
        "type": "multiple_choice",
        "answers": [
            {
                "code": "mylist+=3",
                "correct": false,
                "feedback": "The Python + operator is not defined for a list and an integer."
            },
            {
                "code": "mylist+=[3]",
                "correct": true,
                "feedback": "Correct. When operating on two lists, the Python + operator performs list concatenation."
            },
            {
                "code": "mylist+={3}",
                "correct": false,
                "feedback": "Incorrect. In Python, {3} will be a set, and the + operator is not defined for a list and a set."
            }
        ]
    },
    {
        "question": "Which of these are valid ways to get access to the functions from the NumPy library?",
        "type": "multiple_choice",
        "answers": [
            {
            "code": "import numpy",
            "correct": true,
            "feedback": "Correct. The simplest way to import a library is to just use the import keyword like this."
        },
            {
            "code": "import numpy as np",
            "correct": true,
            "feedback": "Correct. This is the typical way to import NumPy. The functions are imported into the np namespace, which is easier to type than numpy."
        },
            {
            "code": "load numpy",
            "correct": false,
            "feedback": "Incorrect. There is no load keyword in Python. There is a %load magic in JupyterLab/Jupyter Notebook."
        },
            {
            "code": "import NumPy",
            "correct": false,
            "feedback": "Incorrect. Even though the name of the library is NumPy, in Python, it is loaded as numpy (all lowercase)."
        },
            {
            "code": "load NumPy",
            "correct": false,
            "feedback": "Incorrect. There is no load keyword in Python. There is a %load magic in JupyterLab/Jupyter Notebook. The library is referred to as numpy (all lowercase) within Python."
        },
            {
            "code": "#import numpy",
            "correct": false,
            "feedback": "Incorrect. This is C/C++ style."
        },
            {
            "code": "library(numpy)",
            "correct": false,
            "feedback": "Incorrect. This is how to import a library in R."
        }
        ]
    }
]
